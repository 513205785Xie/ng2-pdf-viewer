{"version":3,"sources":["../src/app/app.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAGA,sCAA0C;AAuR1C;IA2BE;QAzBA,WAAM,GAAW,gBAAgB,CAAC;QAYlC,SAAI,GAAW,CAAC,CAAC;QACjB,aAAQ,GAAW,CAAC,CAAC;QACrB,SAAI,GAAW,GAAG,CAAC;QACnB,iBAAY,GAAY,KAAK,CAAC;QAE9B,eAAU,GAAY,IAAI,CAAC;QAE3B,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAG,KAAK,CAAC;QACpB,YAAO,GAAY,IAAI,CAAC;QACxB,eAAU,GAAY,IAAI,CAAC;QAC3B,cAAS,GAAY,KAAK,CAAC;IAiB3B,CAAC;IAED,oCAAa,GAAb,UAAc,MAAc;QAC1B,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;IACtB,CAAC;IAED,oCAAa,GAAb,UAAc,MAAc;QAC1B,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;IACtB,CAAC;IAED,6BAAM,GAAN,UAAO,KAAa;QAClB,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;IACzB,CAAC;IAKD,qCAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,IAAI,GAAQ,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;YACxC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAE9B,MAAM,CAAC,MAAM,GAAG,UAAC,CAAM;gBACrB,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAChC,CAAC,CAAC;YAEF,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAMD,wCAAiB,GAAjB,UAAkB,GAAqB;QACrC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAOD,8BAAO,GAAP,UAAQ,KAAU;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAMD,iCAAU,GAAV,UAAW,YAA6B;QACtC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,6BAAM,GAAN,UAAO,KAAa;QAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAvGU,YAAY;QArRxB,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,qqWAmMT;YACD,MAAM,EAAE,CAAC,g7CA2ER,CAAC;SACH,CAAC;;OAEW,YAAY,CAwGxB;IAAD,mBAAC;CAxGD,AAwGC,IAAA;AAxGY,oCAAY","file":"app.component.js","sourcesContent":["/**\n * Created by vadimdez on 21/06/16.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'pdf-viewer-app',\n  template: `\n    <div mdl class=\"mdl-layout mdl-js-layout mdl-layout--fixed-header mdl-layout--no-drawer-button\">\n        <header class=\"mdl-layout__header mdl-layout__header--waterfall\">\n            <div class=\"mdl-layout__header-row\">\n                <span class=\"mdl-layout-title\">ng2-pdf-viewer</span>\n\n                <div class=\"mdl-layout-spacer\"></div>\n\n                <iframe src=\"https://ghbtns.com/github-btn.html?user=vadimdez&repo=ng2-pdf-viewer&type=star&count=true\" frameborder=\"0\" scrolling=\"0\" width=\"170px\" height=\"20px\"></iframe>\n            </div>\n        </header>\n        <main class=\"mdl-layout__content\">\n            <header>\n                <div class=\"page-content\">\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n                        <path d=\"M21 13v-3l-6-7h-10.997c-1.106 0-2.003 0.898-2.003 2.007v22.985c0 1.109 0.891 2.007 1.997 2.007h15.005c1.103 0 1.997-0.898 1.997-1.991v-2.009h7.993c1.661 0 3.007-1.342 3.007-2.999v-7.002c0-1.656-1.336-2.999-3.007-2.999h-7.993zM20 26v2.007c0 0.548-0.448 0.993-1 0.993h-15c-0.545 0-1-0.446-1-0.995v-23.009c0-0.54 0.446-0.995 0.996-0.995h10.004v4.994c0 1.119 0.895 2.006 1.998 2.006h4.002v2h-7.993c-1.661 0-3.007 1.342-3.007 2.999v7.002c0 1.656 1.336 2.999 3.007 2.999h7.993zM15 4.5l4.7 5.5h-3.703c-0.546 0-0.997-0.452-0.997-1.009v-4.491zM11.995 14h17.011c1.092 0 1.995 0.892 1.995 1.992v7.016c0 1.092-0.893 1.992-1.995 1.992h-17.011c-1.092 0-1.995-0.892-1.995-1.992v-7.016c0-1.092 0.893-1.992 1.995-1.992zM25 19v-2h4v-1h-5v7h1v-3h3v-1h-3zM12 18v-2h2.995c1.111 0 2.005 0.895 2.005 2 0 1.112-0.898 2-2.005 2h-1.995v3h-1v-5zM13 17v2h2.001c0.552 0 0.999-0.444 0.999-1 0-0.552-0.443-1-0.999-1h-2.001zM18 16h2.995c1.111 0 2.005 0.898 2.005 2.006v2.988c0 1.119-0.898 2.006-2.005 2.006h-2.995v-7zM19 17v5h2.001c0.552 0 0.999-0.444 0.999-1v-3c0-0.552-0.443-1-0.999-1h-2.001z\"></path>\n                    </svg>\n                    <h2>Angular 2+ PDF Viewer</h2>\n                    <p>Angular 2+ Component to render PDF</p>\n                </div>\n            </header>\n            <div class=\"page-content\">\n                <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                    <input [(ngModel)]=\"pdfSrc\" [value]=\"pdfSrc\" class=\"mdl-textfield__input\" type=\"text\" id=\"pdf-src\">\n                    <label class=\"mdl-textfield__label\" for=\"pdf-src\">Set URL of the PDF file</label>\n                </div>\n\n                <div class=\"select-file__container\">\n                    <p>\n                        Or render preview by just selecting PDF file (no upload required)\n                    </p>\n                    <input (change)=\"onFileSelected()\" type=\"file\" id=\"file\">\n                </div>\n\n                <div *ngIf=\"error\" class=\"error mb\">\n                    {{ error.message | json }}\n                </div>\n\n                <div class=\"mb\">\n                    <label class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect\" for=\"original-size\">\n                        <input type=\"checkbox\" id=\"original-size\" class=\"mdl-switch__input\"\n                               [checked]=\"originalSize\"\n                               [(ngModel)]=\"originalSize\"\n                        >\n                        <span class=\"mdl-switch__label\">Original size</span>\n                    </label>\n                </div>\n\n                <div class=\"mb\" [hidden]=\"!originalSize\">\n                    <label class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect\" for=\"fit-to-size\">\n                        <input type=\"checkbox\" id=\"fit-to-size\" class=\"mdl-switch__input\"\n                               [checked]=\"fitToPage\"\n                               [(ngModel)]=\"fitToPage\"\n                        >\n                        <span class=\"mdl-switch__label\">Fit to page</span>\n                    </label>\n                </div>\n\n                <div class=\"mb\">\n                    <label class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect\" for=\"render-text\">\n                        <input type=\"checkbox\" id=\"render-text\" class=\"mdl-switch__input\"\n                               [checked]=\"renderText\"\n                               [(ngModel)]=\"renderText\"\n                        >\n                        <span class=\"mdl-switch__label\">Render text layer</span>\n                    </label>\n                </div>\n\n                <div class=\"mb\">\n                    <label class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect\" for=\"autoresize\">\n                        <input type=\"checkbox\" id=\"autoresize\" class=\"mdl-switch__input\"\n                               [checked]=\"autoresize\"\n                               [(ngModel)]=\"autoresize\"\n                        >\n                        <span class=\"mdl-switch__label\">Auto resize</span>\n                    </label>\n                </div>\n\n                <div class=\"mb\">\n                    <label class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect\" for=\"show-all\">\n                        <input type=\"checkbox\" id=\"show-all\" class=\"mdl-switch__input\"\n                               [checked]=\"showAll\"\n                               [(ngModel)]=\"showAll\"\n                        >\n                        <span class=\"mdl-switch__label\">Show all pages</span>\n                    </label>\n                </div>\n\n                <div mdl>\n                    <button (click)=\"incrementZoom(-0.1)\" class=\"mdl-button mdl-js-button\">\n                        -\n                    </button>\n                    <div class=\"page-number mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                        <input [(ngModel)]=\"zoom\"\n                               [value]=\"zoom\"\n                               class=\"mdl-textfield__input\"\n                               type=\"number\"\n                               pattern=\"-?[0-9]*(\\\\.[0-9]+)?\"\n                               id=\"pdf-zoom\"\n                        >\n                        <label class=\"mdl-textfield__label\" for=\"pdf-zoom\">Zoom</label>\n                        <span class=\"mdl-textfield__error\">Input is not a number!</span>\n                    </div>\n                    <button (click)=\"incrementZoom(0.1)\" class=\"mdl-button mdl-js-button\">\n                        +\n                    </button>\n                </div>\n\n\n                <div *ngIf=\"showAll\">\n                  <label class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect\" for=\"stick-to-page\">\n                    <input type=\"checkbox\" id=\"stick-to-page\" class=\"mdl-switch__input\"\n                           [checked]=\"stickToPage\"\n                           [(ngModel)]=\"stickToPage\"\n                    >\n                    <span class=\"mdl-switch__label\">Stick to page</span>\n                  </label>\n                </div>\n\n                <div mdl *ngIf=\"stickToPage && showAll || !showAll\">\n                    <button (click)=\"incrementPage(-1)\" class=\"mdl-button mdl-js-button\">\n                        Previous\n                    </button>\n                    <div class=\"page-number mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                        <input [(ngModel)]=\"page\"\n                               [value]=\"page\"\n                               class=\"mdl-textfield__input\"\n                               type=\"number\"\n                               pattern=\"-?[0-9]*(\\\\.[0-9]+)?\"\n                               id=\"pdf-page\"\n                        >\n                        <label class=\"mdl-textfield__label\" for=\"pdf-page\">Page</label>\n                        <span class=\"mdl-textfield__error\">Input is not a number!</span>\n                    </div>\n                    <span *ngIf=\"pdf\">of {{ pdf.numPages }}</span>\n                    <button (click)=\"incrementPage(1)\" class=\"mdl-button mdl-js-button\">\n                        Next\n                    </button>\n                </div>\n\n                <div>\n                    <button (click)=\"rotate(-90)\" class=\"mdl-button mdl-js-button\">Rotate left</button>\n                    <div class=\"page-number mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                        <input [value]=\"rotation\"\n                               class=\"mdl-textfield__input\"\n                               type=\"number\"\n                               disabled\n                        >\n                        <label class=\"mdl-textfield__label\" for=\"pdf-page\">Angle</label>\n                    </div>\n                    <button (click)=\"rotate(90)\" class=\"mdl-button mdl-js-button\">Rotate right</button>\n                </div>\n\n                <div *ngIf=\"!isLoaded && !error && progressData\" id=\"progress\">\n                    <div class=\"bg\">\n                        <div class=\"bar\" [style.width]=\"progressData.loaded / progressData.total * 100 + '%'\"></div>\n                    </div>\n                    <span>{{ getInt(progressData.loaded / progressData.total * 100) }}%</span>\n                </div>\n\n                <pdf-viewer [src]=\"pdfSrc\"\n                            [(page)]=\"page\"\n                            [rotation]=\"rotation\"\n                            [original-size]=\"originalSize\"\n                            [fit-to-page]=\"fitToPage\"\n                            (after-load-complete)=\"afterLoadComplete($event)\"\n                            [zoom]=\"zoom\"\n                            [show-all]=\"showAll\"\n                            [stick-to-page]=\"stickToPage\"\n                            [render-text]=\"renderText\"\n                            [external-link-target]=\"'blank'\"\n                            [autoresize]=\"autoresize\"\n                            (error)=\"onError($event)\"\n                            (on-progress)=\"onProgress($event)\"\n                ></pdf-viewer>\n\n            </div>\n            <footer class=\"mdl-mini-footer\">\n                <div class=\"mdl-mini-footer__left-section\">\n                    <div class=\"mdl-logo\">ng2-pdf-viewer</div>\n                    <ul class=\"mdl-mini-footer__link-list\">\n                        <li>\n                            <iframe src=\"https://ghbtns.com/github-btn.html?user=vadimdez&type=follow&count=true\" frameborder=\"0\" scrolling=\"0\" width=\"170px\" height=\"20px\"></iframe>\n                        </li>\n                        <li>\n                            <iframe src=\"https://ghbtns.com/github-btn.html?user=vadimdez&repo=ng2-pdf-viewer&type=star&count=true\" frameborder=\"0\" scrolling=\"0\" width=\"100px\" height=\"20px\"></iframe>\n                        </li>\n                        <li>\n                            <iframe src=\"https://ghbtns.com/github-btn.html?user=vadimdez&repo=ng2-pdf-viewer&type=fork&count=true\" frameborder=\"0\" scrolling=\"0\" width=\"170px\" height=\"20px\"></iframe>\n                        </li>\n                    </ul>\n                </div>\n            </footer>\n        </main>\n    </div>\n  `,\n  styles: [`\n    .page-content {\n        padding-top: 10px;\n        width: 50%;\n        margin-left: auto;\n        margin-right: auto;\n    }\n\n    .mdl-layout__content header {\n        color: #fff;\n        background-color: #3f51b5;\n        padding-top: 25px;\n        padding-bottom: 25px;\n        margin-bottom: 25px;\n        text-align: center;\n    }\n\n    .mdl-layout__content header svg {\n        fill: #fff;\n        width: 56px;\n        height: 56px;\n    }\n\n    @media all and (max-width: 480px) {\n        .page-content {\n            width: 100%;\n            margin-left: 10px;\n            margin-right: 10px;\n        }\n    }\n\n    .select-file__container {\n        margin-top: 10px;\n        margin-bottom: 20px;\n    }\n    .select-file__container p {\n        margin-bottom: 0;\n    }\n\n    .page-number {\n        width: 50px;\n    }\n\n    .mb {\n        margin-bottom: 10px;\n    }\n\n    pdf-viewer {\n        display: block;\n    }\n\n    .error {\n        color: #ff4146;\n    }\n\n    #progress {\n        margin-top: 50px;\n        width: 100px;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    #progress .bar,\n    #progress .bg {\n        height: 20px;\n    }\n    #progress .bg {\n        background-color: #e3e3e3;\n    }\n    #progress .bar {\n        width: 0;\n        max-width: 100%;\n        background-color: #3f51b5;\n        transition: .5s width;\n    }\n  `]\n})\n\nexport class AppComponent {\n\n  pdfSrc: string = './pdf-test.pdf';\n\n  // or pass options as object\n  // pdfSrc: any = {\n  //   url: './pdf-test.pdf',\n  //   withCredentials: true,\n  //// httpHeaders: { // cross domain\n  ////   'Access-Control-Allow-Credentials': true\n  //// }\n  // };\n\n  error: any;\n  page: number = 1;\n  rotation: number = 0;\n  zoom: number = 1.0;\n  originalSize: boolean = false;\n  pdf: any;\n  renderText: boolean = true;\n  progressData: PDFProgressData;\n  isLoaded: boolean = false;\n  stickToPage = false;\n  showAll: boolean = true;\n  autoresize: boolean = true;\n  fitToPage: boolean = false;\n\n  constructor() {\n    // Load pdf\n    // let xhr = new XMLHttpRequest();\n    // xhr.open('GET', 'http://localhost:8000/pdf-test.pdf', true);\n    // xhr.responseType = 'blob';\n    //\n    // xhr.onload = (e: any) => {\n    //   console.log(xhr);\n    //   if (xhr.status === 200) {\n    //     let blob = new Blob([xhr.response], {type: 'application/pdf'});\n    //     this.pdfSrc = URL.createObjectURL(blob);\n    //   }\n    // };\n    //\n    // xhr.send();\n  }\n\n  incrementPage(amount: number) {\n    this.page += amount;\n  }\n\n  incrementZoom(amount: number) {\n    this.zoom += amount;\n  }\n\n  rotate(angle: number) {\n    this.rotation += angle;\n  }\n\n  /**\n   * Render PDF preview on selecting file\n   */\n  onFileSelected() {\n    let $img: any = document.querySelector('#file');\n\n    if (typeof (FileReader) !== 'undefined') {\n      let reader = new FileReader();\n\n      reader.onload = (e: any) => {\n        this.pdfSrc = e.target.result;\n      };\n\n      reader.readAsArrayBuffer($img.files[0]);\n    }\n  }\n\n  /**\n   * Get pdf information after it's loaded\n   * @param pdf\n   */\n  afterLoadComplete(pdf: PDFDocumentProxy) {\n    this.pdf = pdf;\n    this.isLoaded = true;\n  }\n\n  /**\n   * Handle error callback\n   *\n   * @param error\n   */\n  onError(error: any) {\n    this.error = error; // set error\n  }\n\n  /**\n   * Pdf loading progress callback\n   * @param {PDFProgressData} progressData\n   */\n  onProgress(progressData: PDFProgressData) {\n    this.progressData = progressData;\n    this.isLoaded = false;\n    this.error = null; // clear error\n  }\n\n  getInt(value: number): number {\n    return Math.round(value);\n  }\n}\n"]}